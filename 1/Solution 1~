1.
fun area (x,y) = x*y/2.0;

> PolyML.use "1.1";
val area = fn : real * real -> real
val it = () : unit
> area(3.0, 4.0);

2.
> 1.0 - 0.9 -0.1; 
val it = ~2.775557562E~17 : real

3.
fun rootplus(a,b,c) = (~b + Math.sqrt(b*b-4.0*a*c)) / (2.0 *a);
fun quadratic(a,b,c,x) :real= a*x*x + b*x +c; 

> rootplus(1.0,121.0,11.0);
val it = ~0.09097749508 : real
> quadratic(1.0,121.0,11.0, ~0.09097749508 );
val it = ~6.896883065E~11 : real

> rootplus(1.22, 3.34, 2.28);
val it = ~1.298819641 : real
> quadratic(1.22, 3.34, 2.28, ~1.298819641);
val it = 7.37903072E~11 : real

4.
fun facr(n) = if (n = 1) then 1 else n*facr(n-1);
fun faci(n, total) = if (n = 1) then total else faci(n-1, total * n);

If the argument is a negative int then the function will run forever because the base case (n =1) will never be reached.
