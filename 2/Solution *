ML Practical 2*
Sebastian Borgeaud
spb61

fun allcons (x, []) = []
	| allcons (x, ls::lss) = (x::ls) :: allcons(x,lss);

allcons(6, [[1,2],[2,3],[],[1]]);

fun concat([], ys) = ys
	| concat (x::xs, ys) = concat(xs, x::ys);

concat([[1,2],[3]],[[4,5],[6]]);


fun choose(n, []) = []
	| choose(1, x::xs) = [x] :: choose(1,xs)
	| choose (n, x::xs) = concat(allcons(x, choose(n-1, xs)), choose(n,xs));


> choose(3, [1,2,3,4,5]);
val it =
   [[1, 4, 5], [1, 3, 4], [1, 3, 5], [1, 2, 3], [1, 2, 4], [1, 2, 5],
      [2, 4, 5], [2, 3, 4], [2, 3, 5], [3, 4, 5]] : int list list

> choose(3, [1,2,3,4,5,6,7]);
val it =
   [[1, 6, 7], [1, 5, 6], [1, 5, 7], [1, 4, 5], [1, 4, 6], [1, 4, 7],
      [1, 3, 4], [1, 3, 5], [1, 3, 6], [1, 3, 7], [1, 2, 3], [1, 2, 4],
      [1, 2, 5], [1, 2, 6], [1, 2, 7], [2, 6, 7], [2, 5, 6], [2, 5, 7],
      [2, 4, 5], [2, 4, 6], [2, 4, 7], [2, 3, 4], [2, 3, 5], [2, 3, 6],
      [2, 3, 7], [3, 6, 7], [3, 5, 6], [3, 5, 7], [3, 4, 5], [3, 4, 6],
      [3, 4, 7], [4, 6, 7], [4, 5, 6], [4, 5, 7], [5, 6, 7]] : int list list

